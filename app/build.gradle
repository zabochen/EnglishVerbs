apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'

android {
    compileSdkVersion 28

    defaultConfig {
        applicationId "ua.ck.zabochen.englishverbs"
        minSdkVersion 16
        targetSdkVersion 28
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    kapt {
        generateStubs = true
        useBuildCache = true
        arguments {
            arg("room.schemaLocation", "$projectDir/schemas".toString())
        }
    }
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')

    // Kotlin
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation "org.jetbrains.anko:anko-commons:0.10.5"

    // Android Support
    def android_support_version = "1.0.0-rc02"
    implementation "androidx.appcompat:appcompat:$android_support_version"
    implementation "androidx.recyclerview:recyclerview:$android_support_version"
    implementation "androidx.cardview:cardview:$android_support_version"
    implementation "com.google.android.material:material:1.0.0-rc01"
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'

    // ViewModel & LiveData
    def lifecycle_version = "2.0.0-rc01"
    implementation "androidx.lifecycle:lifecycle-extensions:$lifecycle_version"
    kapt "androidx.lifecycle:lifecycle-compiler:$lifecycle_version"

    // Room
    def room_version = "2.0.0-rc01"
    implementation "androidx.room:room-runtime:$room_version"
    kapt "androidx.room:room-compiler:$room_version"

    // WorkManager
    def work_manager_version = "1.0.0-alpha07"
    implementation "android.arch.work:work-runtime:$work_manager_version"
    implementation "android.arch.work:work-firebase:$work_manager_version"

    // Mosby
    implementation 'com.hannesdorfmann.mosby3:viewstate:3.1.0'

    // EventBus
    implementation 'org.greenrobot:eventbus:3.1.1'

    // Moxy
    implementation 'com.arello-mobile:moxy:1.5.3'
    implementation 'com.arello-mobile:moxy-android:1.5.3'
    implementation 'com.arello-mobile:moxy-app-compat:1.5.3'
    kapt 'com.arello-mobile:moxy-compiler:1.5.3'

    // Firebase JobDispatcher
    implementation 'com.firebase:firebase-jobdispatcher:0.8.5'

    // ButterKnife
    def butter_knife_version = "9.0.0-SNAPSHOT"
    implementation "com.jakewharton:butterknife:$butter_knife_version"
    kapt "com.jakewharton:butterknife-compiler:$butter_knife_version"

    // Dagger2
    implementation 'com.google.dagger:dagger:2.15'
    kapt 'com.google.dagger:dagger-compiler:2.15'

    // RxJava2
    implementation 'io.reactivex.rxjava2:rxjava:2.1.12'
    implementation 'io.reactivex.rxjava2:rxandroid:2.0.2'

    // Glide
    implementation 'com.github.bumptech.glide:glide:4.7.1'

    // Gson
    implementation 'com.google.code.gson:gson:2.8.5'

    // JUnit
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test:runner:1.1.0-alpha4'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.1.0-alpha4'
}